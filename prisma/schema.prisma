// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model LigaModel {
  ligaId    String         @id @default(auto()) @map("_id") @db.ObjectId
  name      String         @unique
  imageUrl  String?
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
  gameDays  GameDayModel[]
  teams     TeamModel[]
  players   PlayerModel[]

  @@map("ligas")
}

model PlayerModel {
  playerId  String        @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  imageUrl  String?
  liga      LigaModel     @relation(fields: [ligaId], references: [ligaId], onDelete: Cascade)
  ligaId    String        @db.ObjectId
  position  Position
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  actions   ActionModel[]

  @@unique([name, ligaId])
  @@index([ligaId])
  @@map("players")
}

enum Position {
  Goalkeeper
  Defender
  Midfielder
  Forward
}

model TeamModel {
  teamId    String        @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  imageUrl  String?
  liga      LigaModel     @relation(fields: [ligaId], references: [ligaId], onDelete: Cascade)
  ligaId    String        @db.ObjectId
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  homes     GameModel[]   @relation("Homes")
  aways     GameModel[]   @relation("Aways")
  actions   ActionModel[]

  @@unique([name, ligaId])
  @@index([ligaId])
  @@map("teams")
}

model GameDayModel {
  gameDayId String      @id @default(auto()) @map("_id") @db.ObjectId
  gameDay   DateTime
  liga      LigaModel   @relation(fields: [ligaId], references: [ligaId], onDelete: Cascade)
  ligaId    String      @db.ObjectId
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  games     GameModel[]

  @@unique([gameDay, ligaId])
  @@index([ligaId])
  @@map("game-days")
}

model GameModel {
  gameId     String        @id @default(auto()) @map("_id") @db.ObjectId
  gameDay    GameDayModel  @relation(fields: [gameDayId], references: [gameDayId], onDelete: Cascade)
  gameDayId  String        @db.ObjectId
  gameNumber Int
  home       TeamModel     @relation("Homes", fields: [homeId], references: [teamId], onDelete: Cascade)
  homeId     String        @db.ObjectId
  away       TeamModel     @relation("Aways", fields: [awayId], references: [teamId], onDelete: Cascade)
  awayId     String        @db.ObjectId
  homeGols   Int
  awayGols   Int
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @updatedAt
  actions    ActionModel[]

  @@unique([gameDayId, gameNumber])
  @@index([gameDayId])
  @@index([homeId])
  @@index([awayId])
  @@map("games")
}

model ActionModel {
  actionId  String      @id @default(auto()) @map("_id") @db.ObjectId
  game      GameModel   @relation(fields: [gameId], references: [gameId], onDelete: Cascade)
  gameId    String      @db.ObjectId
  team      TeamModel   @relation(fields: [teamId], references: [teamId], onDelete: Cascade)
  teamId    String      @db.ObjectId
  player    PlayerModel @relation(fields: [playerId], references: [playerId], onDelete: Cascade)
  playerId  String      @db.ObjectId
  gols      Int
  assists   Int
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt

  @@unique([gameId, teamId, playerId])
  @@index([gameId])
  @@index([teamId])
  @@index([playerId])
  @@map("actions")
}
